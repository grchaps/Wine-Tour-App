from django.db import models

class WineProducer(models.Model):
    name = models.CharField(max_length=50)
    address = models.CharField(max_length=100)
    lat = models.FloatField(null=True)
    lng = models.FloatField(null=True)

    def __unicode__(self):
	"""Returns a string representation of class `WineProducer`"""
	return 'Winery: %s, Address: %s' % (self.name, self.address)

    @models.permalink
    def get_absolute_url(self):
	"""Returns the URL that links to this instance"""
	pass
	#return (wines.views.wine, [str(self.id)])

class Wine(models.Model):
    name = models.CharField(max_length=50)
    appellation = models.CharField(max_length=30, null=True)
    color = models.CharField(max_length=30, null=True)
    country = models.CharField(max_length=50)
    fruit_source = models.CharField(max_length=30, null=True)
    percent_new_oak = models.IntegerField(null=True)
    percentage_alcohol = models.FloatField(null=True)
    region = models.CharField(max_length=30)
    style = models.CharField(max_length=30)
    vineyard = models.CharField(max_length=50, null=True)
    vintage = models.IntegerField(null=True)
    wine_producer = models.ForeignKey(WineProducer)
    wine_sub_region = models.CharField(max_length=30, null=True)
    wine_type = models.CharField(max_length=30)

    def __unicode__(self):
	"""Returns a string representation of class `Wine`"""
	return 'Wine: %s' % self.name

    @models.permalink
    def get_absolute_url(self):
	"""Returns the URL that links to this instance"""
	pass
	#return (wines.views.wine, [str(self.id)])


